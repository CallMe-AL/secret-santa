{"version":3,"sources":["Participant.js","Participants.js","CreateSS.js","PairItem.js","WarningMessages.js","santa-claus-christmas-clipart.svg","Header.js","xmas02.svg","Pairing.js","Footer.js","SantaGenerator.js","App.js","reportWebVitals.js","index.js"],"names":["Participant","props","className","number","type","placeholder","onChange","handleAddPerson","id","displayWarning","onClick","removePerson","Participants","useState","participants","map","person","index","handleAddPersonChild","warning","CreateSS","createList","class","PairItem","setCopied","copyText","setCopyText","gifter","giftee","text","window","location","origin","toString","split","join","encryptString","onCopy","setTimeout","WarningMessages","warnings","Math","floor","random","Header","src","santaImg","alt","Pairing","decryptHash","pairs","capitalizeName","replace","present","Footer","SantaGenerator","name","setParticipants","setWarnings","santaList","setSantaList","parameters","setParameters","word","toUpperCase","slice","shuffleArray","array","randomIndex","currentIndex","length","string","aes","encrypt","process","createParamArray","paramStr","params","forEach","part","tempArray","push","useEffect","substring","getParams","hash","decrypt","cryptojs","enc","Utf8","e","target","value","toLowerCase","trim","newPartList","filter","nameCheck","currentNames","tempWarnings","indexOf","participantsCopy","shuffledParticipants","nextEl","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a07bf68c.chunk.js","sourcesContent":["const Participant = (props) => {\r\n\r\n  return (\r\n    <div className=\"participant-container\">\r\n      <span className=\"participant-number\">{props.number}</span>\r\n      <input \r\n        type=\"text\"\r\n        placeholder=\"Enter participant name\"\r\n        onChange={props.handleAddPerson}\r\n        id={props.id}\r\n        className={props.displayWarning}\r\n      />\r\n      <button \r\n        className=\"remove-btn\" \r\n        id={props.id}\r\n        onClick={props.removePerson}\r\n        >        \r\n        Remove</button>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Participant\r\n","import Participant from \"./Participant\"\r\nimport React, { useState } from 'react'\r\n\r\nconst Participants = (props) => {\r\n\r\n  // input warning\r\n  const [nameWarning, setNameWarning] = useState(false);\r\n  return (\r\n    <div className=\"participants-container\">\r\n      {props.participants.map((person, index) => {\r\n        return ( \r\n        <Participant \r\n          key={person.id} \r\n          number={index + 1}\r\n          handleAddPerson={props.handleAddPersonChild}\r\n          id={person.id}\r\n          removePerson={props.removePerson}\r\n          // showWarning={props.showWarning ? 'input warning' : 'input'}\r\n          displayWarning={person.warning ? 'input warning' : 'input'}\r\n          />)\r\n      })}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Participants\r\n","const CreateSS = (props) => {\r\n  return (\r\n    <>\r\n      <h2>All set?</h2>\r\n      <button \r\n        className=\"create-ss-list\"\r\n        onClick={props.createList}><i class=\"fas fa-gift\"></i> Create Secret Santa list</button>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default CreateSS\r\n","import React, { useState } from 'react';\r\nimport { CopyToClipboard } from 'react-copy-to-clipboard';\r\n\r\nconst PairItem = (props) => {\r\n\r\n  // copied boolean\r\n  const [copied, setCopied] = useState(false);\r\n  // copied text\r\n  const [copyText, setCopyText] = useState('Copy');\r\n\r\n  const showCopied = () => {\r\n    setCopied(true);\r\n    setCopyText('Copied!');\r\n    \r\n    setTimeout(() => {\r\n      setCopied(false);\r\n      setCopyText('Copy');\r\n    }, 1000);\r\n  }\r\n\r\n  return (\r\n    <ul className=\"pair-item\">\r\n      <li>\r\n        <span className=\"pair-number\">\r\n{props.number}</span>\r\n        <div>\r\n          <span>{props.gifter}</span> is gifting <span>{props.giftee}</span> <i class=\"fas fa-glass-cheers\"></i>\r\n        </div>\r\n        {<CopyToClipboard \r\n          text={window.location.origin.toString() + \"/?name=\" + props.gifter.split(\" \").join(\"%20\") + \"&key=\" + props.encryptString(props.giftee)}\r\n          onCopy={() => showCopied()}\r\n          >\r\n          \r\n          <button className=\"copy-btn\">\r\n            {copyText}\r\n          </button>\r\n        </CopyToClipboard>}\r\n      </li>\r\n      \r\n    </ul>\r\n  )\r\n}\r\n\r\nexport default PairItem\r\n","const WarningMessages = (props) => {\r\n  return (\r\n    <div className=\"warning-messages-container\">\r\n      {props.warnings.map((warning, index) => {\r\n        return (\r\n          <p \r\n            key={index + Math.floor(Math.random() * 10000)} \r\n            className=\"warning-message\"\r\n            >\r\n            {warning}\r\n          </p>\r\n        )\r\n      })}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default WarningMessages\r\n","export default __webpack_public_path__ + \"static/media/santa-claus-christmas-clipart.e56b08e3.svg\";","import santaImg from \"./santa-claus-christmas-clipart.svg\"\r\n\r\nconst Header = () => {\r\n  return (\r\n    <>\r\n      <img className=\"main-img\" src={santaImg} alt=\"santa\"></img>\r\n      <h1>Secret Santa Generator</h1>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Header\r\n","export default __webpack_public_path__ + \"static/media/xmas02.d2f5457a.svg\";","import present from \"./xmas02.svg\"\r\n\r\nconst Pairing = (props) => {\r\n  const giftee = props.decryptHash(props.pairs[1]);\r\n  return (\r\n    <div className=\"inner-pair-container\">      \r\n      <h2>Psst, <span>{props.capitalizeName(props.pairs[0].replace(\"%20\", \" \"))}</span>!</h2>\r\n      <h3>You're gifting <span>{props.capitalizeName(giftee)}</span> this year.</h3>\r\n      <img className=\"pairing-img\" src={present} alt=\"christmas-present\"></img>\r\n      <h3>Have fun! Make sure it's good!</h3>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Pairing\r\n","const Footer = () => {\r\n  return (\r\n    <footer className=\"footer\">\r\n      <p>No e-mail or personal info but a name required. :)</p>\r\n      <p>Happy Ho-Ho-Holidays! (lololol). By Alex</p>\r\n    </footer>\r\n  )\r\n}\r\n\r\nexport default Footer\r\n","import Participants from \"./Participants\"\r\nimport CreateSS from \"./CreateSS\"\r\nimport PairItem from \"./PairItem\"\r\nimport WarningMessages from \"./WarningMessages\"\r\nimport React, { useState, useEffect } from 'react'\r\nimport Header from \"./Header\"\r\nimport Pairing from \"./Pairing\"\r\nimport Footer from \"./Footer\"\r\nimport cryptojs from 'crypto-js'\r\nimport aes from 'crypto-js/aes'\r\n\r\nconst SantaGenerator = () => {\r\n\r\n  const startingParticipants = [\r\n    {\r\n      id: \"1\",\r\n      name: '',\r\n      warning: false\r\n    },\r\n    {\r\n      id: \"2\",\r\n      name: '',\r\n      warning: false\r\n    },\r\n    {\r\n      id: \"3\",\r\n      name: '',\r\n      warning: false\r\n    }\r\n  ]\r\n  \r\n  // people objects\r\n  const [participants, setParticipants] = useState(startingParticipants);\r\n  // warning messages\r\n  const [warnings, setWarnings] = useState([]);\r\n  // secret santa list\r\n  const [santaList, setSantaList] = useState([]);\r\n  // search parameters\r\n  const [parameters, setParameters] = useState([]);\r\n\r\n  const handleAddPersonChild = (e) => {\r\n    const name = e.target.value;\r\n    participants.forEach(part => {\r\n      if (part.id === e.target.id) {\r\n        part.name = name.toLowerCase().trim();\r\n      }     \r\n    });\r\n  }\r\n\r\n  const removePerson = (e) => {\r\n    if (participants.length > 3) {\r\n      const newPartList = participants.filter((person) => person.id !== e.target.id);\r\n      setParticipants(newPartList);\r\n    } else {  \r\n      participants.forEach(person => {\r\n        person.warning = true;\r\n      });\r\n      setWarnings([\"You need at least 3 people for a Secret Santa event!\"]);      \r\n    }\r\n  }\r\n\r\n  const addNewPerson = () => {\r\n    const id = Math.floor(Math.random() * 10000);\r\n    setParticipants([...participants, {id: id.toString(), name: '', warning: false}]);    \r\n  }\r\n\r\n  const capitalizeName = (name) => {\r\n    const words = name.split(\" \");\r\n\r\n    const upperCasedWords = words.map(word => {\r\n      return word[0].toUpperCase() + word.slice(1);\r\n    }).join(\" \");\r\n\r\n    return upperCasedWords;\r\n  }\r\n\r\n  const createList = () => {\r\n    let nameCheck = true;\r\n    let currentNames = [];\r\n    let tempWarnings = [];\r\n\r\n    participants.forEach((person, index) => {\r\n      person.warning = false;\r\n      if (person.name === '') {\r\n        tempWarnings.push(`Person ${index + 1} is nameless :(. Please edit or remove person.`);       \r\n        person.warning = true;\r\n        nameCheck = false;\r\n      } else if (currentNames.indexOf(person.name) !== -1) {\r\n        tempWarnings.push(`Person ${index + 1} is a duplicate. Please edit, or include last initial or name.`);\r\n        person.warning = true;\r\n        nameCheck = false;\r\n      } else {\r\n        currentNames.push(person.name);\r\n      }      \r\n    });\r\n\r\n    if (currentNames.length === 0) {\r\n      setWarnings([\"You need at least 3 people for a Secret Santa event!\"]);\r\n    } else {\r\n      setWarnings(tempWarnings);\r\n    }\r\n\r\n    currentNames = [];\r\n\r\n    if (nameCheck) {\r\n      const participantsCopy = participants.slice();\r\n      const shuffledParticipants = shuffleArray(participantsCopy);\r\n\r\n      setSantaList(shuffledParticipants);      \r\n    }        \r\n  }\r\n\r\n  const shuffleArray = (array) => {\r\n    // Fisher-Yates shuffle: https://bost.ocks.org/mike/shuffle/\r\n    let currentIndex = array.length,  randomIndex;\r\n\r\n    // While there remain elements to shuffle...\r\n    while (currentIndex != 0) {\r\n\r\n      // Pick a remaining element...\r\n      randomIndex = Math.floor(Math.random() * currentIndex);\r\n      currentIndex--;\r\n\r\n      // And swap it with the current element.\r\n      [array[currentIndex], array[randomIndex]] = [array[randomIndex], array[currentIndex]];\r\n        \r\n    }\r\n\r\n    return array;\r\n  }\r\n\r\n  const encryptString = (string) => {\r\n    const key = process.env.REACT_APP_LINK_KEY;\r\n    return aes.encrypt(string, key);\r\n  }\r\n\r\n  const decryptHash = (hash) => {\r\n    const key = process.env.REACT_APP_LINK_KEY;\r\n    const plainText = aes.decrypt(hash.toString(), key);\r\n    return plainText.toString(cryptojs.enc.Utf8);\r\n  }\r\n\r\n  const getParams = () => {\r\n    const paramStr = window.location.toString().substring(1);\r\n    return paramStr !== null && paramStr!== \"\" && createParamArray(paramStr);\r\n  }\r\n\r\n  const createParamArray = (paramStr) => {\r\n    let params = [];\r\n    let paramSplit = paramStr.split(\"&\");\r\n    paramSplit.forEach(part => {\r\n      let tempArray = part.split(\"=\");\r\n      params.push(tempArray[1]);\r\n    });\r\n    setParameters(params);\r\n  }\r\n\r\n  useEffect(() => {\r\n    getParams();\r\n  }, []);\r\n\r\n  if (parameters.length > 1) {\r\n    return ( \r\n      <div className=\"pair-container\">\r\n        <Header />\r\n        <Pairing \r\n          pairs={parameters}\r\n          decryptHash={decryptHash}\r\n          capitalizeName={capitalizeName}\r\n        />\r\n      </div>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <div className=\"generator-wrap\">\r\n      <Header />      \r\n      <h2>Enter participants below</h2>\r\n      <WarningMessages warnings={warnings}/>\r\n      <Participants \r\n        participants={participants}\r\n        handleAddPersonChild={handleAddPersonChild}\r\n        removePerson={removePerson}/>\r\n      \r\n      <button \r\n        className=\"add-participant-btn\"\r\n        onClick={addNewPerson}><i class=\"fa fa-tree\" aria-hidden=\"true\"></i> Add new participant</button>\r\n      <CreateSS createList={createList}/>\r\n      {warnings.length === 0 && \r\n        santaList.map((person, index) => {\r\n          let nextEl;\r\n\r\n          if (index + 1 > santaList.length - 1) {\r\n            nextEl = capitalizeName(santaList[0].name);\r\n          } else {\r\n            nextEl = capitalizeName(santaList[index+1].name);\r\n          }\r\n          return ( \r\n            <PairItem \r\n              key={person.id}\r\n              number={index + 1}\r\n              gifter={capitalizeName(person.name)}\r\n              giftee={nextEl}\r\n              encryptString={encryptString}              \r\n            />)\r\n\r\n        })\r\n      }\r\n      <Footer />\r\n      \r\n    </div>\r\n  )\r\n}\r\n\r\nexport default SantaGenerator","import './styles/styles.scss';\nimport SantaGenerator from './SantaGenerator';\n\nfunction App() {\n  return (\n  <div className=\"container\">    \n    <SantaGenerator />\n  </div>\n    \n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}